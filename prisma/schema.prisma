datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password  Password?
  pomodoros Pomodoro[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Pomodoro {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String?

  timers Timer[]
}

model Timer {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  length Int         @default(1500)
  type   TimerType   @default(FOCUS)
  status TimerStatus @default(ACTIVE)

  pomodoro   Pomodoro @relation(fields: [pomodoroId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pomodoroId String

  exerciseGroup EXERCISE_GROUPS @default(legs)
}

enum TimerType {
  FOCUS
  EXERCISE
}

enum TimerStatus {
  ACTIVE
  OPEN
  STOPPED
  FINISHED
}

enum EXERCISE_GROUPS {
  chest
  back
  legs
}
